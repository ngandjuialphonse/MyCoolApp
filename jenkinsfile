pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }

    stages {
        stage('SonarQube Scan') {
            steps {
                withSonarQubeEnv('sonarQube') { 
                    sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mycoolapp2_mycoolapp2'
                    //sh 'mvn sonar:sonar'
                }
            }
        }
        
        stage('All Maven Commands') {
            steps {
                sh 'mvn clean test compile install package'
            }
        }
        
        // stage('Upload Artifact') {
        //     steps {
        //         sh 'curl -uadmin:password -T target/bio*.jar "http://54.91.248.155:8081/artifactory/artifactory/"'
        //     }
        // }
        
        stage('Image Build') {
            steps {
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 737047471328.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t alphonsedev .'
            }
        }
        
        stage('Push Image') {
            steps {
                sh 'docker tag alphonsedev:latest 737047471328.dkr.ecr.us-east-1.amazonaws.com/alphonsedev:${BUILD_ID}'
                sh 'docker push 737047471328.dkr.ecr.us-east-1.amazonaws.com/alphonsedev:${BUILD_ID}'
            }
        }
        
        stage('Deploy to EKS') {
            steps {
                script {
                    withKubeConfig(credentialsId: 'eks_credential') {
                        sh 'kubectl apply -f deployment.yaml' // Assuming your manifest file is named deployment.yaml.
                    }
                }
            }
        }
    }
}